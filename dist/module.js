!function(){var util,net,logger,objAdd,insp,obtain,parseTmp,parseDate,hasContent,includes,isSolidString,isPlainObject,smbcn,MODULE_TITLE;Wsh&&Wsh.SmbConnector||(Wsh.SmbConnector={},util=Wsh.Util,Wsh.FileSystem,net=Wsh.Net,logger=Wsh.Logger,objAdd=Object.assign,insp=util.inspect,obtain=util.obtainPropVal,parseTmp=util.parseTemplateLiteral,parseDate=util.parseDateLiteral,hasContent=util.hasContent,includes=util.includes,isSolidString=util.isSolidString,isPlainObject=util.isPlainObject,smbcn=Wsh.SmbConnector,MODULE_TITLE="WshSmbConnector/SmbConnector.js",smbcn.connectSyncSurelyUsingLog=function(comp,shareName,domain,user,pwd,options){var FN="smbcn.connectSyncSurelyUsingLog",loggerObj=obtain(options,"logger",{}),lggr=logger.create(loggerObj);lggr.info("Start the function "+FN),lggr.info('Connecting to "'+comp+'"'),lggr.info('shareName: "'+shareName+'"'),lggr.info('domain: "'+domain+'", user: "'+user+'"'),lggr.info('password: "****"');var throws=obtain(options,"throws",!1);lggr.info("throws: "+String(throws));var retVal,isDryRun=obtain(options,"isDryRun",!1);try{retVal=net.SMB.connectSyncSurely(comp,shareName,domain,user,pwd,{isDryRun:isDryRun}),isDryRun&&lggr.info("dry-run ["+FN+"]: "+retVal),lggr.success("Succeeded the connecting!")}catch(e){if(throws)throw new Error(insp(e));lggr.error(insp(e))}lggr.info("Finished the function "+FN),obtain(options,"transportsLog",!0)&&lggr.transport(),obtain(options,"showsResult",!1)&&net.SMB.showCurrentSession()},smbcn.connectSyncUsingSchema=function(schema,taskName,options){var functionName,typeErrVal,FN="smbcn.connectSyncUsingSchema";isPlainObject(schema)||(functionName=FN,typeErrVal=schema,util.throwTypeError("object",MODULE_TITLE,functionName,typeErrVal)),isSolidString(taskName)||function(functionName,typeErrVal){util.throwTypeError("string",MODULE_TITLE,functionName,typeErrVal)}(FN,taskName);var loggerObj=obtain(options,"logger",{}),lggr=logger.create(loggerObj);lggr.info("Start function "+FN),lggr.info('taskName: "'+taskName+'"');var taskNames=Object.keys(schema.tasks),regNameMatcher=includes(taskName,"*")?new RegExp(taskName.replace(/\*/g,".*")):new RegExp(taskName),filteredNames=taskNames.filter(function(taskName){return regNameMatcher.test(taskName)});lggr.info("matched tasks: "+filteredNames.length);var vals=schema.components;hasContent(options.overwrites)&&Object.keys(vals).forEach(function(key){null===vals[key]&&Object.keys(options.overwrites).some(function(writeKey){if(key===writeKey)return vals[key]=options.overwrites[writeKey],!0})});var tasks=schema.tasks;obtain(options,"isDryRun",!1)&&lggr.info("dry-run ["+FN+"]:"),filteredNames.forEach(function(taskName){if(!1!==tasks[taskName].available){var comp=parseDate(parseTmp(tasks[taskName].comp||"",vals)),share=parseDate(parseTmp(tasks[taskName].share||"",vals)),domain=parseDate(parseTmp(tasks[taskName].domain||"",vals)),user=parseDate(parseTmp(tasks[taskName].user||"",vals)),pwd=parseDate(parseTmp(tasks[taskName].pwd||"",vals));try{smbcn.connectSyncSurelyUsingLog(comp,share,domain,user,pwd,objAdd({},options,{logger:lggr,transportsLog:!1,showsResult:!1,"throws":!1}))}catch(e){lggr.error(insp(e))}}else lggr.info("Skip the non-available task: "+taskName)}),lggr.info("Finished function "+FN),obtain(options,"transportsLog",!0)&&lggr.transport(),obtain(options,"showsResult",!1)&&net.SMB.showCurrentSession()})}();
